// This is your Prisma schema file

// Define the database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Prisma Client generator
generator client {
  provider = "prisma-client-js"
}

// Models
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  userType  String   // 'customer' or 'provider'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  profile   Profile?
  orders    Order[]
}

model Profile {
  id          String   @id @default(cuid())
  userId      String   @unique
  phone       String?
  bio         String?
  address     String?
  city        String?
  state       String?
  country     String?
  postalCode  String?
  profilePic  String?  // URL to profile image
  skills      Json?    // For providers - store skills/services
  isComplete  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id          String    @id @default(cuid())
  userId      String
  serviceType String
  description String?
  status      String    @default("pending") // pending, confirmed, in-progress, completed, cancelled
  amount      Float?
  scheduledAt DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WaitlistEntry {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  userType  String   // 'customer' or 'provider'
  country   String
  state     String
  city      String
  services  Json?    // Store services as JSON
  createdAt DateTime @default(now())
} 