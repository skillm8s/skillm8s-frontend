// This is your Prisma schema file

// Define the database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Prisma Client generator
generator client {
  provider = "prisma-client-js"
}

// Models
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  userType  String   // 'customer' or 'provider'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  profile   Profile?
  orders    Order[]
}

model Profile {
  id          String   @id @default(cuid())
  userId      String   @unique
  phone       String?
  bio         String?
  address     String?
  city        String?
  state       String?
  country     String?
  postalCode  String?
  profilePic  String?  // URL to profile image
  skills      Json?    // For providers - store skills/services
  isComplete  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id          String    @id @default(cuid())
  userId      String
  serviceType String
  description String?
  status      String    @default("pending") // pending, confirmed, in-progress, completed, cancelled
  amount      Float?
  scheduledAt DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WaitlistEntry {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  userType  String   // 'customer' or 'provider'
  country   String
  state     String
  city      String
  services  Json?    // Store services as JSON
  createdAt DateTime @default(now())
}

model ServiceProvider {
  id                String   @id @default(cuid())
  email             String   @unique
  firstName         String
  lastName          String
  phone             String?
  
  // Location
  country           String
  state             String
  city              String
  address           String?
  zipCode           String?
  
  // Service Categories (multiple selection)
  serviceCategories Json     // Array of service category strings
  
  // Skills and Experience
  skills            Json?    // Array of skill objects with name, level, years
  experience        Int?     // Years of experience
  certifications    Json?    // Array of certification objects
  education         String?  // Education background
  portfolio         Json?    // Array of portfolio items/photos
  
  // Business Information
  businessName      String?
  businessType      String?  // 'individual', 'llc', 'corporation', etc.
  taxId             String?
  licenseNumber     String?
  licensingBody     String?
  licenseExpiry     DateTime?
  insuranceProvider String?
  insurancePolicy   String?
  insuranceExpiry   DateTime?
  bondedAmount      Float?
  
  // Availability 
  availability      Json?    // Weekly schedule and time slots
  timeZone          String   @default("America/New_York")
  
  // Profile
  bio               String?
  profileImage      String?
  verified          Boolean  @default(false)
  rating            Float?   @default(0)
  totalJobs         Int      @default(0)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
} 